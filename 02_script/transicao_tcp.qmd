---
title: "Análise de Sequência"
format: html
editor: visual
---

# 1. Análise de sequência

A análise de sequência contém três etapas principais:

1.  Codificação das narrativas ou processos em sequências;

2.  Mensuração das dissimilaridades dos indivíduos par a par ;

3.  Aplicação de técnica de redução de dimensionalidade (ex.: análise de cluster) para agrupar sequências similares.

Antes de adentrar nestas etapas, vamos trabalhar com o tratamento dos dados conforme script a seguir.

## 1.1. Tratamento dos dados (2022-2023)

A base de dados utilizada neste script, é a de trabalhadores que participaram no máximo de cinco entrevistas em cinco trimestres seguidos.

Carregando pacotes necessários.

```{r}
#| warning: false

options(scipen = 999)

library(TraMineR)
library(tidyverse)
library(TraMineRextras)
library(FactoMineR)
library(questionr)
library(descriptio)
library(purrr)
library(stringr)
library(ggseqplot)
library(factoextra)

```

A base de dados utilizada neste trabalho possui **id** para grupos de indivíduos. No próximo bloco será criado um filtro para o ano de 2022 e 2023, para pessoas que possuem idade a partir de 14 anos.

Foi criada uma variável para identificar os indivíduos chamada ID_UNICO. Este ID_UNICO foi construído a partir da concatenação de algumas variáveis: UPA, V1008 (número de seleção do domicílio), V1014 (grupo de amostras), V2008 (dia de nascimento), V20081(mês de nascimento), V20082 (Ano de nascimento), V2007 (sexo), estrato.

```{r}
#| warning: false
#| eval: false

# Carregando a base

data_1 <- vroom::vroom("C:/Users/alefs/Downloads/tcp_5trimestres.csv",
                       progress = FALSE,
                       show_col_types = FALSE)

# Filtrando os anos de 2022 e 2023 e filtrando pessoas maiores que 14 anos

data_2018_2019 <- data_1 |>   
                    select(id, Ano, Trimestre, UF, 
                           UPA, Estrato, 
                           V1008,V4012,V1014,V1022,
                           V1016, V2007, V2008, V20081, 
                           V20082, V2007, V2009,
                           VD4001,VD4002, VD3004, V4039,
                           VD4010, V4032, V4019, V2010) |>  
                    filter(V2009 >= 14, 
                           Ano == 2018 | 
                            Ano == 2017 & Trimestre == 4)

# Criando a variável ID_UNICO

data_id <- data_2018_2019 |> 
            mutate(ID_UNICO = 
                     paste(UPA, V1008, V1014, 
                           V2008, V20081, V20082,
                           V2007, Estrato, sep = "_")) |> 
            relocate(ID_UNICO, .before = Ano)

# Criando a variável Trimestre_Ano

data_id_unico <- data_id |> 
                    mutate(Trimestre_Ano = paste(Trimestre, 
                           Ano, sep = "-"), 
                           .before = UF)

```

Algumas categorias da variável ocupação (V4012) serão unidos. Todos os níveis serão renomeados com iniciais de suas respectivas descrição. As pessoas fora da força de trabalho (VD4001) e na condição de desocupados (VD4002) foram agregadas à variável V4012 com a finalidade de completar os estados nas sequências na posição de desocupação ou fora da força de trabalho. A tabela abaixo sintetiza estes tratamentos.

+--------------------------------------+----------------------------+--------------+
| Antes do tratamento                  | Após o tratamento          | Abreviação   |
+======================================+:==========================:+:============:+
| -   Empregado do setor privado.      | Empregado do setor privado | ESPR         |
|                                      |                            |              |
| -   Trabalhador doméstico.           |                            |              |
+--------------------------------------+----------------------------+--------------+
| -   Pessoa fora da força de tratalho | Fora do trabalho           | PFT          |
|                                      |                            |              |
| -   Pessoa desocupada                |                            |              |
+--------------------------------------+----------------------------+--------------+
| -   Conta própria.                   | Empreendedor               | EMP          |
| -   Empregador                       |                            |              |
+--------------------------------------+----------------------------+--------------+

Tratamento para renomear categorias e incluir a categoria de fora da força de trabalho.

```{r}
#| eval: false

data <- 
  data_id_unico|> 
  mutate(V4012_ajust = 
           case_when(
                V4012 == "Conta própria"  ~ "TCP",
                V4012 == "Empregado do setor privado" ~ "ESPriv",
                V4012 == "Trabalhador doméstico" ~ "ESPriv",
                V4012 == "Empregado do setor público (inclusive empresas de economia mista)" ~ "ESPub",
                V4012 == "Militar do exército, da marinha, da aeronáutica, da polícia militar ou do corpo de bombeiros militar" ~ "ESPub",  
                V4012 == "Trabalhador familiar não remunerado" ~ "TFNR",
                V4012 == "Empregador" ~ "EMP"), 
         .after = Ano)


#Agregando a condição de força da força de trabalho e desocupado

data_0 <- 
  data |> 
  mutate(
      ocupacao = 
        case_when(
                VD4001 == "Pessoas na força de trabalho" & 
                VD4002 == "Pessoas ocupadas" ~ 
                                  as.character(V4012_ajust),
                VD4001 == "Pessoas na força de trabalho" & 
                VD4002 == "Pessoas desocupadas" ~ "PFT",
                VD4001 == "Pessoas fora da força de trabalho" ~ 
                                  "PFT"), 
      .after = V4012_ajust)

```

De acordo com os resultados, observa-se que foram retirados aqueles indivíduos que foram empregados ou servidores públicos (ESPub) assim como o Trabalhador Familiar Não Remunerado (TFNR) em algum momento. Fizemos isso apenas para tentar diminuir a complexidade das análises.

```{r}
#| eval: false

excluindo_ocupacoes <- 
            data_0 |> 
                filter(ocupacao == "TFNR" | 
                       ocupacao == "ESPub" |
                        ocupacao == "EMP" |
                         ocupacao == "ESPriv" |
                         ocupacao == "ESPub")

excluindo_ocupacoes <- excluindo_ocupacoes$ID_UNICO

dados_tratados <- data_0 |> 
                    filter(!ID_UNICO %in% excluindo_ocupacoes)

```

No próximo bloco, serão selecionadas as variáveis de interesse (ID_UNICO, V1016 que identifica o trimestre, e ocupação que foi tratada anteriormente).

A partir da próxima subseção começamos a lidar com a análise de sequência propriamente dita.

## 1.2. Codificação das narrativas ou processos em sequências

Nesta etapa, os processos são codificados em sequências. Precisamos deixar os dados em um formato para rodar a análise de sequências.

```{r}
#| warning: false
#| eval: false

data_long <- 
  dados_tratados |>
  select(ID_UNICO, V1016,ocupacao)

#Transformando a estrutura de dados para wide
data_wide <- data_long |> 
  pivot_wider(names_from = V1016, 
              values_from = ocupacao,
              values_fn = list)

# Colocando as colunas em ordem de entrevista e para caracteres
data_ordem <- data_wide|> 
  relocate(ID_UNICO,`1`, `2`, `3`, `4`, `5`) |>
  mutate(across(`1`:`5`, as.character)) 

# id_seq foi criada apenas para ter mais uma coluna de identificação 

data_filtro <- data_ordem  |> 
  filter(if_all(2:6, ~ . != "NULL")) |>  
  filter(if_all(2:5, ~ . == "TCP")) |> 
  mutate(id_seq = row_number()) |> 
  mutate(transicao = case_when(`5` == "TCP" ~ 0,
                               `5` == "PFT" ~ 1)) |> 
  filter(!is.na(transicao))

```

Foram mantidos apenas aqueles indivíduos que possuem registros nos cinco trimestres, conforme o último bloco de códigos acima. Isso resultou em uma amostra de 46645 indivíduos que foram acompanhados ao longo de 5 trimestres entre 2022 e 2023.

## 1.3 Agregando variáveis

```{r}
features <- dados_tratados |> 
  filter(ID_UNICO %in% data_filtro$ID_UNICO,
         V1016 == 4) |> 
  select(ID_UNICO, V2009, V2007, VD3004, V2010, UF)

data_final <- data_filtro |> 
  left_join(features, by = c("ID_UNICO" = "ID_UNICO"))
```
